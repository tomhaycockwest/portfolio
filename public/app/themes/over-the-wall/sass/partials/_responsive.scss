// ==========================================================================
// $ Responsive / Media Queries
// ==========================================================================

// Redefine these as needed
$bp-ranges: (
	small: 576px,
	medium: 768px,
	large: 992px,
	xlarge: 1200px,
) !default;

$screen: 'only screen' !default;

//
// Media Query: Breakpoint
// $from & $to can be values in px or predefined values from `$bp-ranges`
//
// @require {function} em
//
// @param {string} $type 'above' | 'below' | 'between'
// @param {dimension} $from Breakpoint start
// @param {dimension} $to Breakpoint end
// @param {string} $dimension width | height
// @param {bollean} $convert Convert to ems
//
// @examples:
// @include break(below, 640px) { // small screens }
// @include break(below, medium) { // small screens }
// @include break(below, medium, $convert: false) { // small screens, using px }
// @include break(between, 640px, 720px) { // above 640 but below 720px }
// @include break(above, 640px, $dimension: height) { // above 640px in height }
//
@mixin break($type, $from, $to: false, $dimension: false, $convert: true) {

	// predefined breakpoints
	@if map-has-key($bp-ranges, $from) {
		$from: map-get($bp-ranges, $from);
	}

	@if map-has-key($bp-ranges, $to) {
		$to: map-get($bp-ranges, $to);
	}

	$dimension: if($dimension, $dimension, 'width');

	// convert to ems
	$from: if($convert and $from, em($from), $from);
	$to: if($convert and $to, em($to), $to);

	// warn about invalid arguments
	@if $from and $to and $from >= $to {
		@warn '[break mixin] The start breakpoint (#{$from}) is larger than the end breakpoint (#{$to}). Are these the right way round?';
	}

	// create media query string
	$types: (
		'above': '(min-#{$dimension}: #{$from})',
		'below': '(max-#{$dimension}: #{$from})',
		'between': '(min-#{$dimension}: #{$from}) and (max-#{$dimension}: #{$to})'
	);

	$mq: map-get($types, $type);

	// output media query
	@media #{$screen} and #{$mq} {
		@content;
	}

}

//
// Media Query Helper: Breakpoint below $size
//
// @param {int} $size Breakpoint
// @param {bool} $convert Convert to ems
// @return {string} Media query string
//
// @example
// @include below(640px) { // small screens }
//
@mixin below($size, $dimension: false, $convert: true) {
	@include break('below', $size, $dimension: $dimension, $convert: $convert) {
		@content;
	};
}

//
// Media Query Helper: Breakpoint above $size
//
// @param {int} $size Breakpoint
// @param {bool} $convert Convert to ems
// @return {string} Media query string
//
// @example
// @include above(640px) { // large screens }
//
@mixin above($size, $dimension: false, $convert: true) {
	@include break('above', $size, $dimension: $dimension, $convert: $convert) {
		@content;
	}
}

//
// Media Query Helper: Breakpoint between $from and $to
//
// @param {dimension} $from Breakpoint start
// @param {dimension} $to Breakpoint end
// @param {bool} $convert  Convert to ems
// @return {string} Media query string
//
// @example
// @include between(640px, 720px) { // above 640px but below 720px }
//
@mixin between($from, $to, $dimension: false, $convert: true) {
	@include break('between', $from, $to, $dimension: $dimension, $convert: $convert) {
		@content
	};
}

//
// Media Query Helper: Landscape Orientation
//
// @example
// @include landscape { // landscape orientation }
//
@mixin landscape {
	@media #{$screen} and (orientation: landscape) {
		@content;
	}
}

//
// Media Query Helper: Portrait Orientation
//
// @example
// @include portrait { // portrait orientation }
//
@mixin portrait {
	@media #{$screen} and (orientation: portrait) {
		@content;
	}
}
